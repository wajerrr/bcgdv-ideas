{"version":3,"sources":["utils/guid.js","reducers/mock_server.js","reducers/action_creators.js","reducers/ideas-reducer.js","reducers/root-reducer.js","components/tile/tile.js","app.js","index.js"],"names":["guid","Math","floor","random","toString","substring","date","Date","dataStore","id","created_date","title","body","mockServerFetch","route","options","Promise","resolve","setTimeout","ADD_TILE","DELETE_TILE","UPDATE_TILE","REQUEST_TILES","RECEIVE_TILES","REQUEST_NEW_TILE","RECEIVE_NEW_TILE","REQUEST_UPDATE_TILE","RECEIVE_UPDATE_TILE","REQUEST_DELETE_TILE","RECEIVE_DELETE_TILE","initialState","rootReducer","combineReducers","ideas","state","arguments","length","undefined","action","type","tempId","concat","Object","toConsumableArray","filter","tile","map","objectSpread","tiles","Tile","props","context","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this$props","document","getElementById","focus","newProps","_this$state","updateTileCallback","deleteTileCallback","e","setState","target","value","_this2","_this$props2","createdDate","_this$state2","react_default","a","createElement","className","onBlur","updateTile","onChange","handleTitleChange","handleBodyChange","maxLength","includes","onClick","deleteTile","Component","Main","_Component","apply","inherits","createClass","key","fetchTiles","fetchNewTile","fetchDeleteTile","fetchUpdateTile","idea","components_tile_tile","App","connect","dispatch","then","catch","error","console","log","message","addTile","receiveNewTile","receiveTiles","store","compose","applyMiddleware","thunk","createStore","reducer","ReactDOM","render","es","src_app"],"mappings":"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","file":"static/js/main.5e0b86f1.chunk.js","sourcesContent":["const guid = () => Math.floor((1 + Math.random()) * 0x10000)\n  .toString(16)\n  .substring(1);\n\nexport default guid;\n","import guid from '../utils/guid';\n\n\nconst date = new Date().toString();\nconst dataStore = [\n  {\n    id: guid(), created_date: date, title: '1dsdsd', body: 'ds',\n  },\n  {\n    id: guid(), created_date: date, title: ' 2dsdsd', body: 'ds',\n  },\n  {\n    id: guid(), created_date: date, title: ' 3dsdsd', body: 'ds',\n  },\n  {\n    id: guid(), created_date: date, title: ' 4dsdsd', body: 'ds',\n  },\n  {\n    id: guid(), created_date: date, title: ' 5 dsdsd', body: 'ds',\n  },\n  {\n    id: guid(), created_date: date, title: '6 dsdsd', body: 'ds',\n  },\n  {\n    id: guid(), created_date: date, title: '7 dsdsd', body: 'ds',\n  },\n  {\n    id: guid(), created_date: date, title: '8 dsdsd', body: 'ds',\n  },\n  {\n    id: guid(), created_date: date, title: '9 dsdsd', body: 'ds',\n  },\n];\n\nfunction getIdeas() {\n  return new Promise((resolve) => {\n    setTimeout(() => { resolve(dataStore); }, 500);\n  });\n}\n\nfunction getNewIdea() {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({\n        id: guid(), created_date: new Date().toString(),\n      });\n    }, 1500);\n  });\n}\n\nfunction postUpdateIdea() {\n  // TODO mimick reducer and upate initial state ? not in the scope I guess\n  return new Promise((resolve) => {\n    setTimeout(() => { resolve(); }, 1500);\n  });\n}\n\nfunction postDeleteIdea() {\n  // TODO mimick reducer and upate initial state ? not in the scope I guess\n  return new Promise((resolve) => {\n    setTimeout(() => { resolve(); }, 1500);\n  });\n}\n\nexport default function mockServerFetch(route, options) {\n  switch (route) {\n    case 'ideas/':\n      return getIdeas();\n    case 'ideas/new':\n      return getNewIdea();\n    case 'ideas/update':\n      return postUpdateIdea(options);\n    case 'ideas/delete':\n      return postDeleteIdea(options);\n    default:\n      return '';\n  }\n}\n","import mockServerFetch from './mock_server';\nimport guid from '../utils/guid';\n\nexport const ADD_TILE = 'ADD_TILE';\nexport const DELETE_TILE = 'DELETE_TILE';\nexport const UPDATE_TILE = 'UPDATE_TILE';\n\nexport const REQUEST_TILES = 'REQUEST_TILES';\nexport const RECEIVE_TILES = 'RECEIVE_TILES';\n\nfunction requestTiles() {\n  return {\n    type: REQUEST_TILES,\n  };\n}\n\nfunction receiveTiles(tiles) {\n  return {\n    type: RECEIVE_TILES,\n    tiles,\n  };\n}\n\nexport function fetchTiles() {\n  return (dispatch) => {\n    dispatch(requestTiles());\n    return mockServerFetch('ideas/')\n      .then(tiles => dispatch(receiveTiles(tiles)))\n      .catch((error) => {\n        console.log(error.message);\n      });\n  };\n}\n\nexport const REQUEST_NEW_TILE = 'REQUEST_NEW_TILE';\nexport const RECEIVE_NEW_TILE = 'RECEIVE_NEW_TILE';\n\nexport function addTile(tempId) {\n  return { type: ADD_TILE, tempId };\n}\n\nexport function deleteTile(id) {\n  return { type: DELETE_TILE, id };\n}\n\nexport function updateTile(id, body, title) {\n  return {\n    type: UPDATE_TILE, id, body, title,\n  };\n}\n\nfunction requestNewTile() {\n  return {\n    type: REQUEST_NEW_TILE,\n  };\n}\n\nfunction receiveNewTile(tile, tempId) {\n  return {\n    type: RECEIVE_NEW_TILE,\n    tile,\n    tempId,\n  };\n}\n\nexport function fetchNewTile() {\n  const tempId = `${guid()}-temp-local-id`;\n  return (dispatch) => {\n    dispatch(addTile(tempId));\n    dispatch(requestNewTile());\n    return mockServerFetch('ideas/new')\n      .then(tile => dispatch(receiveNewTile(tile, tempId)))\n      .catch((error) => {\n        console.log(error.message);\n      });\n  };\n}\n\nexport const REQUEST_UPDATE_TILE = 'REQUEST_UPDATE_TILE';\nexport const RECEIVE_UPDATE_TILE = 'RECEIVE_UPDATE_TILE';\n\nfunction requestUpdateTile() {\n  return {\n    type: REQUEST_UPDATE_TILE,\n  };\n}\n\nfunction receiveUpdateTile(tile, tempId) {\n  return {\n    type: RECEIVE_UPDATE_TILE,\n    tile,\n    tempId,\n  };\n}\n\nexport function fetchUpdateTile(id, body, title) {\n  return (dispatch) => {\n    dispatch(updateTile(id, body, title));\n    dispatch(requestUpdateTile());\n    return mockServerFetch('ideas/update', { id, body, title })\n      .then(() => dispatch(receiveUpdateTile()))\n      .catch((error) => {\n        console.log(error.message);\n      });\n  };\n}\n\n\nexport const REQUEST_DELETE_TILE = 'REQUEST_DELETE_TILE';\nexport const RECEIVE_DELETE_TILE = 'RECEIVE_DELETE_TILE';\n\nfunction requestDeleteTile() {\n  return {\n    type: REQUEST_DELETE_TILE,\n  };\n}\n\nfunction receiveDeleteTile(tile, tempId) {\n  return {\n    type: RECEIVE_DELETE_TILE,\n    tile,\n    tempId,\n  };\n}\n\nexport function fetchDeleteTile(id) {\n  return (dispatch) => {\n    dispatch(deleteTile(id));\n    dispatch(requestDeleteTile());\n    return mockServerFetch('ideas/delete', { id })\n      .then(() => dispatch(receiveDeleteTile()))\n      .catch((error) => {\n        console.log(error.message);\n      });\n  };\n}\n","/* eslint-disable no-case-declarations */\nimport {\n  ADD_TILE,\n  DELETE_TILE,\n  UPDATE_TILE,\n  RECEIVE_TILES,\n  RECEIVE_NEW_TILE,\n\n} from './action_creators';\n\n\nconst initialState = [];\n\nexport default function ideas(state = initialState, action) {\n  switch (action.type) {\n    case ADD_TILE:\n      const newItem = {\n        id: action.tempId,\n      };\n      return [\n        newItem,\n        ...state,\n      ];\n    case DELETE_TILE:\n      return state.filter(tile => tile.id !== action.id);\n    case UPDATE_TILE:\n      return state.map(tile => (tile.id === action.id\n        ? { ...tile, body: action.body, title: action.title }\n        : tile));\n    case RECEIVE_NEW_TILE:\n      return state.map(tile => (tile.id === action.tempId\n        ? {\n          ...tile,\n          id: action.tile.id,\n          created_date: action.tile.created_date,\n        }\n        : tile));\n    case RECEIVE_TILES:\n      return action.tiles;\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport ideas from './ideas-reducer';\n\nconst rootReducer = combineReducers({\n  ideas,\n});\n\nexport default rootReducer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './tile.css';\n\nclass Tile extends Component {\n  constructor(props, context) {\n    super(props, context);\n    const { title, body } = props;\n    this.state = {\n      title: title || '',\n      body: body || '',\n    };\n  }\n\n\n  componentDidMount() {\n    const { title, id } = this.props;\n\n    if (title === undefined) {\n      document.getElementById(`${id}-input`).focus();\n    }\n  }\n\n  componentWillReceiveProps(newProps) {\n    const { title, body } = this.state;\n\n    this.state = {\n      title: newProps.title || title,\n      body: newProps.body || body,\n    };\n  }\n\n  updateTile(id, body, title) {\n    const { updateTileCallback } = this.props;\n    updateTileCallback(id, body, title);\n  }\n\n  deleteTile(id) {\n    const { deleteTileCallback } = this.props;\n    deleteTileCallback(id);\n  }\n\n\n  handleBodyChange(e) {\n    this.setState({ body: e.target.value });\n  }\n\n  handleTitleChange(e) {\n    this.setState({ title: e.target.value });\n  }\n\n  render() {\n    const { id, createdDate } = this.props;\n    const { title, body } = this.state;\n\n    return (\n      <li className=\"idea-tile\">\n        <input\n          id={`${id}-input`}\n          onBlur={() => this.updateTile(id, body, title)}\n          value={title}\n          onChange={e => this.handleTitleChange(e)}\n        />\n        <input\n          onBlur={() => this.updateTile(id, body, title)}\n          onChange={e => this.handleBodyChange(e)}\n          maxLength=\"140\"\n          value={body}\n        />\n        <p className=\"tile-id\">\nid:\n          {' '}\n          {id.includes('-temp-local-id') ? '' : id}\n        </p>\n        <p className=\"tile-create-date\">\ncreated_date:\n          {' '}\n          {createdDate}\n        </p>\n        <button type=\"button\" className=\"delete-button\" onClick={() => this.deleteTile(id)}>Delete</button>\n      </li>\n    );\n  }\n}\n\nTile.propTypes = {\n  body: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  createdDate: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  updateTileCallback: PropTypes.func.isRequired,\n  deleteTileCallback: PropTypes.func.isRequired,\n\n};\n\nexport default Tile;\n","/* eslint-disable react/forbid-prop-types */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Tile from './components/tile/tile';\nimport {\n  fetchDeleteTile as fetchDeleteTileAction,\n  fetchUpdateTile as fetchUpdateTileAction,\n  fetchNewTile as fetchNewTileAction,\n  fetchTiles as fetchTilesAction,\n} from './reducers/action_creators';\nimport './app.css';\n\nexport class Main extends Component {\n  componentDidMount() {\n    const { fetchTiles } = this.props;\n    fetchTiles();\n  }\n\n  render() {\n    const {\n      ideas, fetchNewTile, fetchDeleteTile, fetchUpdateTile,\n    } = this.props;\n    return (\n\n      <section className=\"main\">\n        <button type=\"button\" onClick={() => fetchNewTile()}>ADD TILE</button>\n        <ul>\n          { ideas.map(idea => (\n            <Tile\n              body={idea.body}\n              title={idea.title}\n              createdDate={idea.created_date}\n              id={idea.id}\n              deleteTileCallback={fetchDeleteTile}\n              updateTileCallback={fetchUpdateTile}\n              key={idea.id}\n            />\n          )) }\n        </ul>\n      </section>\n    );\n  }\n}\n\nMain.propTypes = {\n  ideas: PropTypes.array.isRequired,\n  fetchTiles: PropTypes.func.isRequired,\n  fetchNewTile: PropTypes.func.isRequired,\n  fetchDeleteTile: PropTypes.func.isRequired,\n  fetchUpdateTile: PropTypes.func.isRequired,\n};\n\nexport function mapStateToProps(state) {\n  const { ideas } = state;\n  return { ideas };\n}\n\n\nconst App = connect(\n  mapStateToProps, {\n    fetchDeleteTile: fetchDeleteTileAction,\n    fetchUpdateTile: fetchUpdateTileAction,\n    fetchNewTile: fetchNewTileAction,\n    fetchTiles: fetchTilesAction,\n  },\n)(Main);\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { compose, applyMiddleware, createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers/root-reducer';\n\nimport App from './app';\n\nconst store = compose(\n  applyMiddleware(thunk),\n)(createStore)(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n"],"sourceRoot":""}